import { useEffect } from 'react';

export function useTelegramRegistration() {
  useEffect(() => {
    const tg = window.Telegram?.WebApp;

    alert("üì≤ useTelegramRegistration –∑–∞–ø—É—â–µ–Ω");

    if (!tg) {
      alert("‚ùå Telegram.WebApp –Ω–µ –Ω–∞–π–¥–µ–Ω");
      return;
    }

    const user = tg.initDataUnsafe?.user;
    const referrer_id = tg.initDataUnsafe?.start_param;

    alert("üîç –ü–æ–ª—É—á–µ–Ω user: " + JSON.stringify(user));
    alert("üéØ –ü–æ–ª—É—á–µ–Ω referrer_id: " + referrer_id);

    if (!user) {
      alert("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
      return;
    }

    const payload = {
      telegram_id: user.id,
      username: user.username || '',
      referrer_id
    };

    alert("üì¶ –û—Ç–ø—Ä–∞–≤–ª—è—é payload: " + JSON.stringify(payload));

    fetch('https://lottery-server-waif.onrender.com/users/register', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload),
    })
      .then(async (res) => {
        alert("üì¨ –û—Ç–≤–µ—Ç –æ—Ç backend: " + res.status);
        if (res.status === 201) {
          alert("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω");
        } else if (res.status === 409) {
          alert("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        } else {
          const err = await res.json();
          alert("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + JSON.stringify(err));
        }
      })
      .catch(err => {
        alert("‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: " + err.message);
      });
  }, []);
}
